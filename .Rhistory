c<-3
c*2
c<-4
c<-[6,7,8,9]
source("/home/pavan/RPCA")
runApp("RPCA")
library(shiny)
runApp("RPCA")
df<-read.csv("/home/pavan/Desktop/test.csv")
df
dq<-df[!sapply(df,is.character)]
dq<-df[ ,colSums(apply(df, MARGIN=c(1,2),FUN=is.character))==0]
is.character(df[1,4])
df[1,4]
df[1]
df[1,1]
df[1,4]
df[1,4]object
object?
)
?object
?is.object
is.object(df[1,4])
what object
is.character(df[1,4])
is.numeric(df[1,1])
is.factor(df[1,4])
df[1,7]
is.factor(df[1,7])
is.character(df[1,7])
shiny::runApp('RPCA')
is.character(df[1,19])
is.numeric(df[1,19])
df[!sapply(df,is.factor)]
removeNA(df)
dq<-removeNA(df)
?is.blank
?is.
?is
da<-removeString(df)
dl<-removeNA(da)
library(corrplot)
mtcars
corr(mtcars)
cor(mtcars)
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
df<-read.csv("/home/pavan/Desktop/test.csv")
dq<-removeString(df)
da<-removeNA(df)
da<-removeNA(dq)
shiny::runApp('RPCA')
df
dim(dq)
shiny::runApp('RPCA')
shiny::runApp('RPCA')
source(gdata)
install.packages(gdata)
install.packages("gdata")
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
source('/home/pavan/Desktop/test.csv')
df<-read.csv('home/pavan/Desktop/test.csv')
df<-read.csv("hom/pavan/Desktop/test.csv")
df<-read.csv("home/pavan/Desktop/test.csv")
df<-read.csv("/home/pavan/Desktop/test.csv")
df
removeNA(df)
dq<-removeNA(df)
shiny::runApp('RPCA')
corr<-cor(da)
corrplot(corr,method="circle")
?corrplot
View(da)
shiny::runApp('RPCA')
shiny::runApp('RPCA')
?selectizeInput
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
df<-read.csv("/home/pavan/Desktop/test.csv")
dp<-removeNa(removeString(df))
dp<-removeNA(removeString(df))
val<-data.frame(value=colnames(dp),label=colnames(dp))
val
library("shiny")
selectizeInput("colNames","select", choices=val,multiple=TRUE)
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
complete=c("RI"="ri", "nj"="nJ")
is.dataframe(complete)
?is
is(complete,dataframe)
is(complete(dataFrame))
mylist<-list(colnames(df))
mylist
mylist<-list(colnames(df),colnames(df)
)
mylist
shiny::runApp('RPCA')
c<-c("ri"="ri","nj"="NJ")
typeof(c)
class(c)
showClass(c)
getClass(c)
str(c)
class(c)
attributes(c)
c<-c(colnames(df)=colnames(df))
c<-c(colnames(df))
c
c<-("1"="2")
c
1
colnames(dp)
for(i in nrow(colnames(dp))){}
col<-colnames(dp)
setNames(col,col)
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
choices=setNames(colnames(dp),colnames(dp))
choices
dim(choices)
class(choices)
state.abb
state.name
cho<-setNames(state.abb,state.name)
cho
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
colnames(dq_)
colnames(dq)
colnames(dp)
state.abb
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
install.packages("missMDA")
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
mtcars
col<-colnames(mtcars)
col
col[-2]
dq<-mtcars[,col]
dq
col<-col[-2]
dq<-mtcars[,col]
dq
shiny::runApp('RPCA')
shiny::runApp('RPCA')
m<-cor(mtcars)
corrplot(m,method="circle")
shiny::runApp('RPCA')
imputePCA(mtcars)
df<-mtcars(-c(1,2))
df<-mtcars
df[1,4]<-NULL
df[1,4]<-NA
df
imputePCA(df)
imputePCA(df,ncp=2)
imputePCA(df,ncp=3)
imputePCA(df,ncp=3,maxiter=1000)
df<-mtcars
df[1,3]<-NA
imputePCA(df)
shiny::runApp('RPCA')
shiny::runApp('RPCA')
View(dq)
shiny::runApp('RPCA')
df<-read.csv("/home/Desktop/test.csv")
df<-read.csv("/home/pavan/Desktop/test.csv")
dq<-removeNA(removeString(df))
nb<-estim_ncpPCA(dq,ncp.max=5)
df.comp<-imputePCA(dq)
orange
data(orange)
df<-data(orange)
df
data(orange)
View(orange)
imputePCA(orange)
imputePCA(dq)
View(dq)
df=dq[,1:3]
imputePCA(df)
df<-dq[,1:5]
imputePCA(df)
df<-dq[,1:10]
imputePCA(df)
df<-dq[,1:8]
imputePCA(df)
df<-dq[,1:7]
imputePCA(df)
df<-dq[,1:6]
imputePCA(df)
View(dq)
dq<-dq[,-7]
df<-dq[,1:7]
imputePCA(df)
dq<-read.csv("/home/pavan/Desktop/test.csv")
dq<-removeNA(removeString(dq))
dq<-removeZero(dq)
source("/home/pavan/RPCA/PCAFunc.R")
dq<-removeZero(dq)
source("/home/pavan/RPCA/PCAFunc.R")
dq<-removeZero(dq)
imputePCA(dq)
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
nb<-estim_ncpPCA(dq,ncp.max=5)
nb<-estim_ncpPCA(dq,ncp.max=3)
nb<-estim_ncpPCA(dq,ncp.max=2)
df.comp<-imputePCA(dq,3)
df.comp$completeObs
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
corrplot(m,method="circle",tl.cex=4)
corrplot(m,method="circle",tl.cex=1)
?corrplot
corrplot(m,method="circle",order="AOE")
corrplot(m,method="circle",order="FPC")
corrplot(m,method="circle",order="hclust")
shiny::runApp('RPCA')
shiny::runApp('RPCA')
install.packages('zoom')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
source("http://pastebin.com/raw.php?i=UyDBTA57")
install.packages("RCurl")
source("http://pastebin.com/raw.php?i=UyDBTA57")
library(RCurl()
)
library(RCurl)
install.packages(RCurl)
install.packages("RCurl")
install.packages("RCurl")
source("http://pastebin.com/raw.php?i=UyDBTA57")
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
source("http://bioconductor.org/biocLite.R")
biocLite("pcaMethods")
shiny::runApp('RPCA')
shiny::runApp('RPCA')
shiny::runApp('RPCA')
